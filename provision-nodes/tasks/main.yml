# (c) 2017 DataNexus Inc.  All Rights Reserved
---
# if we're provisioning a RHEL machine, then we need to ensure that
# it's subscribed before we can install anything (if it hasn't been
# registered already, of course, if that's the case then we can skip
# this step)
- block:
  - redhat_subscription:
      state: present
      username: "{{rhel_username}}"
      password: "{{rhel_password}}"
      consumer_id: "{{rhel_consumer_id}}"
    become: true
    when: rhel_username is defined and rhel_password is defined and rhel_consumer_id is defined
  when: ansible_distribution == 'RedHat'
# then, setup the web proxy (if a proxy_env hash was defined)
- include_role:
    name: setup-web-proxy
  when: (proxy_env | default({})) != {}
# add a local YUM repository (if the `yum_repo_url` is defined)
- include_role:
    name: add-local-repository
  vars:
    yum_repository: "{{yum_repo_url | default('')}}"
  when: (yum_repo_url | default('')) != '' or (reset_mirrors | default(false))
# install the packages in the input package list from the standard YUM
# repository
- include_role:
    name: install-packages
  vars:
    package_list: "{{combined_package_list}}"
# and setup mirror for EPEL repository (if defined)
- include_role:
    name: add-local-repository
  vars:
    yum_repository: "{{epel_repo_url | default('')}}"
    repository_name: epel
    regex_repl_vals:
        baseurl:
          regex: '^#?(baseurl=)(http[s]?://[^\/]+\/[^0-9]*)(\/.*)$'
          replx: "\\g<1>{{yum_repository}}\\g<3>"
        mirrorlist:
          regex: "^(mirrorlist=http[s]?://mirrors.fedoraproject.org/.*)$"
          eplx: "#\\g<1>"
  when: (epel_repo_url | default('')) != '' or (reset_mirrors | default(false))
# now that we've completed the setup, we can call the appropriate role to
# deploy the application to our target nodes
- include_role:
    name: "dn-{{application_deployed | default(application)}}"
